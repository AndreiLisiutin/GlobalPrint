<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmationNotEqualToPassword" xml:space="preserve">
    <value>Password and it's confirmation are not the same.</value>
    <comment>Ошибка о том, что пароль и подтверждение пароля не совпадают.</comment>
  </data>
  <data name="ConfirmOfferLinkLabel" xml:space="preserve">
    <value>terms and conditions</value>
    <comment>Ссылка на оферту в тексте о согласии с офертой</comment>
  </data>
  <data name="ConfirmOfferLinkString" xml:space="preserve">
    <value>I have read and agree to the</value>
    <comment>Текст о согласии с офертой перед ссылкой "оферты"</comment>
  </data>
  <data name="ConfirmOfferRequiredError" xml:space="preserve">
    <value>To continue registration you should accept all the terms and conditions.</value>
    <comment>Ошибка об обязательности согласия с офертой</comment>
  </data>
  <data name="ConfirmPasswordFieldLabel" xml:space="preserve">
    <value>Confirm password.</value>
    <comment>Лэйбл поля "Подтвердите пароль"</comment>
  </data>
  <data name="ConfirmPasswordFieldRequiredError" xml:space="preserve">
    <value>Field "Confirm password" is required.</value>
    <comment>Ошибка о том, что поле "Подтвердите пароль" обязательно для заполнения</comment>
  </data>
  <data name="ConfirmPasswordFieldTypeError" xml:space="preserve">
    <value>Field "Confirm password" should contain correct password.</value>
    <comment>Ошибка о типе поля "Подтвердите пароль"</comment>
  </data>
  <data name="EmailFieldLabel" xml:space="preserve">
    <value>Email</value>
    <comment>Лэйбл поля "Email"</comment>
  </data>
  <data name="EmailFieldRequiredError" xml:space="preserve">
    <value>Field "Email" is required.</value>
    <comment>Ошибка о том, что поле "Email" обязательно для заполнения</comment>
  </data>
  <data name="EmailFieldTypeError" xml:space="preserve">
    <value>Field "Email" should contain correct email address.</value>
    <comment>Ошибка о типе поля "Email"</comment>
  </data>
  <data name="LoginLinkLabel" xml:space="preserve">
    <value>Sign in</value>
    <comment>Ссылка "Войдите"</comment>
  </data>
  <data name="LoginLinkString" xml:space="preserve">
    <value>Have an account?</value>
    <comment>Текст "Есть аккаунт?" перед ссылкой "Войдите"</comment>
  </data>
  <data name="PasswordFieldLabel" xml:space="preserve">
    <value>Password</value>
    <comment>Лэйбл поля "Пароль"</comment>
  </data>
  <data name="PasswordFieldMinLengthError" xml:space="preserve">
    <value>Minimum password length - {2} characters.</value>
    <comment>Ошибка о минимальной длине поля "Пароль"</comment>
  </data>
  <data name="PasswordFieldRequiredError" xml:space="preserve">
    <value>Field "Password" is required.</value>
    <comment>Ошибка о том, что поле "Пароль" обязательно для заполнения</comment>
  </data>
  <data name="PasswordFieldTypeError" xml:space="preserve">
    <value>Field "Password" should contain correct password.</value>
    <comment>Ошибка о типе поля "Пароль"</comment>
  </data>
  <data name="RegisterButtonLabel" xml:space="preserve">
    <value>Register</value>
    <comment>Лэйбл кнопки "Зарегистрироваться"</comment>
  </data>
  <data name="RegisterFormHeader" xml:space="preserve">
    <value>Registration</value>
    <comment>Заголовок формы ("Регистрация")</comment>
  </data>
  <data name="RegisterFormTabTitle" xml:space="preserve">
    <value>Registration</value>
    <comment>Лэйбл табки в браузере</comment>
  </data>
</root>