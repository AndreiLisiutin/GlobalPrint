<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButtonLabel" xml:space="preserve">
    <value>Отмена</value>
    <comment>Кнопка "Отмена"</comment>
  </data>
  <data name="DayColumnHeader" xml:space="preserve">
    <value>День</value>
    <comment>Заголовок колонки "День"</comment>
  </data>
  <data name="DisabledFieldLabel" xml:space="preserve">
    <value>Отключен</value>
    <comment>Лэйбл поля "Отключен"</comment>
  </data>
  <data name="EmailFieldLabel" xml:space="preserve">
    <value>Email</value>
    <comment>Лэйбл поля "Email"</comment>
  </data>
  <data name="FormHeaderEditText" xml:space="preserve">
    <value>Редактирование принтера</value>
    <comment>Заголовок страницы для редактирования принтера</comment>
  </data>
  <data name="FormHeaderNewText" xml:space="preserve">
    <value>Новый принтер</value>
    <comment>Заголовок страницы для добавления принтера</comment>
  </data>
  <data name="FormTabEditTitle" xml:space="preserve">
    <value>Редактирование принтера</value>
    <comment>Лэйбл табки в браузере для редактирования принтера</comment>
  </data>
  <data name="FormTabNewTitle" xml:space="preserve">
    <value>Добавление принтер</value>
    <comment>Лэйбл табки в браузере для добавления принтера</comment>
  </data>
  <data name="IsColoredColumnHeader" xml:space="preserve">
    <value>Цветная</value>
    <comment>Заголовок колонки "Цветная"</comment>
  </data>
  <data name="IsSupportedColumnHeader" xml:space="preserve">
    <value>Наличие</value>
    <comment>Заголовок колонки "Наличие"</comment>
  </data>
  <data name="IsTwoSidedColumnHeader" xml:space="preserve">
    <value>Двусторонняя</value>
    <comment>Заголовок колонки "Двусторонняя"</comment>
  </data>
  <data name="LatitudeFieldLabel" xml:space="preserve">
    <value>Долгота</value>
    <comment>Лэйбл поля "Долгота"</comment>
  </data>
  <data name="LocationFieldLabel" xml:space="preserve">
    <value>Расположение</value>
    <comment>Лэйбл поля "Расположение"</comment>
  </data>
  <data name="LongtitudeFieldLabel" xml:space="preserve">
    <value>Широта</value>
    <comment>Лэйбл поля "Широта"</comment>
  </data>
  <data name="OpenColumnHeader" xml:space="preserve">
    <value>Открыто</value>
    <comment>Заголовок колонки "Открыто"</comment>
  </data>
  <data name="OpenFromColumnHeader" xml:space="preserve">
    <value>С</value>
    <comment>Заголовок колонки "С"</comment>
  </data>
  <data name="OpenToColumnHeader" xml:space="preserve">
    <value>По</value>
    <comment>Заголовок колонки "По"</comment>
  </data>
  <data name="PhoneFieldLabel" xml:space="preserve">
    <value>Телефон</value>
    <comment>Лэйбл поля "Телефон"</comment>
  </data>
  <data name="PriceColumnHeader" xml:space="preserve">
    <value>Стоимость</value>
    <comment>Заголовок колонки "Стоимость"</comment>
  </data>
  <data name="PricingTableHeader" xml:space="preserve">
    <value>Услуги и цены</value>
    <comment>Заголовок таблицы "Услуги и цены"</comment>
  </data>
  <data name="PrinterNameFieldLabel" xml:space="preserve">
    <value>Название</value>
    <comment>Лэйбл поля "Название"</comment>
  </data>
  <data name="SaveButtolLabel" xml:space="preserve">
    <value>Сохранить</value>
    <comment>Кнопка "Сохранить"</comment>
  </data>
  <data name="ScheduleTableHeader" xml:space="preserve">
    <value>Расписание работы принтера</value>
    <comment>Заголовок таблицы "Расписание работы принтера"</comment>
  </data>
  <data name="ServiceColumnHeader" xml:space="preserve">
    <value>Услуга</value>
    <comment>Заголовок колонки "Услуга"</comment>
  </data>
  <data name="SizeColumnHeader" xml:space="preserve">
    <value>Размер</value>
    <comment>Заголовок колонки "Размер"</comment>
  </data>
</root>