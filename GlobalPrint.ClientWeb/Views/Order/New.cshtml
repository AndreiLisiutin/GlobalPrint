@using Resources.ClientWeb.Order
@model Order_NewViewModel
@{
    ViewBag.Title = NewViewResource.FormTabTitle;
    Layout = "~/Views/Shared/_NavigationLayout.cshtml";
}

@section Scripts{
    <script src="~/Resources/Scripts/GlobalPrint/Order/New.js"></script>
}

<div class="container">
    @using (Html.BeginForm("New", "Order", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal" }))
    {
        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger container margin-top-20">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @Html.ValidationSummary(false, Resources.Resource.ValidationErrors + ": ")
            </div>
        }

        <h2>@NewViewResource.FormHeaderText</h2>

        @Html.HiddenFor(e => e.Order.PrinterID, new { @id = "PrinterID" })
        @Html.HiddenFor(e => e.Order.UserID, new { @id = "UserID" })
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrinterNameFieldLabel</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(e => e.Printer.Name, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrinterLocationFieldLabel</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(e => e.Printer.Location, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.DocumentFieldLabel</label>
            <div class="col-sm-9">
                <div class="input-group">
                    <label class="input-group-btn">
                        <span class="btn btn-default">
                            @NewViewResource.ChooseFileButtonLabel <input type="file" id="fileupload" style="display: none;">
                        </span>
                    </label>
                    <input type="text" class="form-control" readonly>
                    <div id="progress" class="input-group-addon progress progressbar-wrapper">
                        <span id="errorText" class="text-danger"></span>
                        <div class="progress-bar progress-bar-info progressbar-bar">
                            <span id="progressPercentText" class="progressbarpercent progressbar-text"></span>
                        </div>
                    </div>
                    @Html.HiddenFor(e => e.Order.FileToPrint, new { @id = "fileId", @required = "required" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.SecretCodeFieldLabel</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(e => e.Order.SecretCode, new { @class = "form-control", @required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.ty</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.Order.PrintTypeID, new List<SelectListItem>(), new { @id = "printType", @class = "form-control", @required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrintFormatLabel</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.Order.PrintSizeID, new List<SelectListItem>(), new { @id = "printSize", @class = "form-control", @required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrintColorLabel</label>
            <div class="col-sm-9">
                @Html.CheckBoxFor(e => e.Order.IsColored, new { @id = "IsColored" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrintTwoSideLabel</label>
            <div class="col-sm-9">
                @Html.CheckBoxFor(e => e.Order.IsTwoSided, new { @id = "IsTwoSided" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrintCopiesCountLabel</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(e => e.Order.CopiesCount, new { @type = "number", @class = "form-control", @required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label text-left">@NewViewResource.PrintCommentLabel</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(e => e.Order.Comment, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <input type="submit" id="printButton" value=@NewViewResource.PrintButtonLabel class="btn btn-default" />
            </div>
        </div>
    }
</div>
