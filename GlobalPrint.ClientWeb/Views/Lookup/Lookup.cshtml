@using GlobalPrint.Infrastructure.CommonUtils.Pagination
@using GlobalPrint.ClientWeb.Models.Lookup
@model LookupViewModel
@{
    string SearchText = ViewBag.SearchText as string;
    LookupTypeEnum LookupType = (LookupTypeEnum)ViewBag.LookupType;
}

<div id="lookupWindow">
    <button type="button" class="close hidden-xs" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

    <label class="labelBox mgBottom input-wrapper form-inline gp-data-filter focus lookup-search">
        <div class="input-group fullwidth">
            @Html.TextBox("searchText", SearchText, new { @class = "input-def fullwidth js-clearable", @id = "searchText" })
            @Html.Hidden("lookupType", (int)LookupType, new { @class = "", @id = "lookupType" })
            <div class="dLabel input-group-btn" id="searchTextSubmit" title="Поиск"><img src="/Content/img/search.png"></div>
        </div>
    </label>

    <div class="lkInsetOverflow">
        <div class="outerTable lookup-table-wrapper">
            <table class="defaultTable table-hover offer-table" width="100%">
                <tr class="tableHead">
                    <th class="col-xs-1"></th>
                    @foreach (LookupResultValue column in Model.Columns)
                    {
                        <th class="col-xs-@column.Length @(column.IsIdentifier ? "hidden" : "") @(column.SortOrder == SortByEnum.Asc ? "sort-by-asc" : "") @(column.SortOrder == SortByEnum.Desc ? "sort-by-desc" : "") lookup-header" 
                            sort-by-column="@column.Identifier">
                            @column.Name
                            <span class="glyphicon lookup-header-sort-icon lookup-header-sort-icon-asc glyphicon-sort-by-attributes @(column.SortOrder == SortByEnum.Asc ? "" : "hidden")"></span>
                            <span class="glyphicon lookup-header-sort-icon lookup-header-sort-icon-desc glyphicon-sort-by-attributes-alt  @(column.SortOrder == SortByEnum.Desc ? "" : "hidden")"></span>
                        </th>
                    }
                </tr>
                @foreach (List<LookupResultValue> entity in Model.Values.Entities)
                {
                    <tr class="lookup-row">
                        <td class="vcenter checkbox-wrapper">
                            <input type="checkbox" class="lookup-row-is-selected setClick" value="1" />
                            <div class="loginCheckBox" onclick="$(this).closest('.checkbox-wrapper').find('.setClick').click();">
                                <div class="checked"></div>
                            </div>
                        </td>
                        @foreach (LookupResultValue property in entity)
                        {
                            if (property?.IsIdentifier ?? false)
                            {
                                <td class="hidden lookup-row-id">
                                    @Html.Hidden("lookup-row-id-input", property.Value, new { @class = "lookup-row-id-input" })
                                    @property.Value
                                </td>
                            }
                            else if (property?.IsText ?? false)
                            {
                                <td align="left" class="lookup-row-text">
                                    @Html.Hidden("lookup-row-text-input", property.Value, new { @class = "lookup-row-text-input" })
                                    @property.Value
                                </td>
                            }
                            else
                            {
                                <td align="left">
                                    @property.Value
                                </td>
                            }
                        }
                    </tr>
                }
            </table>
        </div>
    </div>

    @if (Model.Values.PagesCount > 1)
    {
        <div id="lookupPagination">
            @Html.Paging(Model.Values, page => Url.Action("Fake", "Fake", new { CurrentPage = page, ItemsPerPage = Model.Values.PagesCount, searchText = SearchText }))
        </div>
    }

    <div class="buttonsBox" align="center">
        <button type="button" class="defaultButton coloredBtn" data-dismiss="modal" id="lookupSelect">Выбрать</button>
        <button type="button" class="defaultButton coloredBtn" data-dismiss="modal" id="lookupClose">Отмена</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        //uncheck checked users on check current
        $('.lookup-row-is-selected').click(function () {
            $(this).attr('checked', true).closest('.checkbox-wrapper').find('.loginCheckBox').toggleClass('checked');
            $('.lookup-row-is-selected').not(this).attr('checked', false).closest('.checkbox-wrapper').find('.loginCheckBox').removeClass('checked');
        });
        $('#lookupSelect').click(function () {
            var anySelected = $('.lookup-row-is-selected:checked')
                .length;
            if (anySelected) {
                var id = $('.lookup-row-is-selected:checked')
                     .closest('.lookup-row')
                     .find('.lookup-row-id-input')
                     .val();
                var text = $('.lookup-row-is-selected:checked')
                     .closest('.lookup-row')
                     .find('.lookup-row-text-input')
                     .val();
                $('#lookupWindow')
                    .closest('.lookup-wrapper')
                    .trigger('setValue', {
                        id: id,
                        name: text
                    });
            }
        });

        function updateLookup(CurrentPage, ItemsPerPage) {
            var searchText = $('#searchText').val();
            var lookupType = $('#lookupType').val();

            var sortByAscHeader = $('.lookup-header.sort-by-asc')[0];
            var sortByDescHeader = $('.lookup-header.sort-by-desc')[0];
            var sortByIdentifier = null;
            var sortByDirection = null;

            if (sortByAscHeader) {
                sortByIdentifier = $(sortByAscHeader).attr('sort-by-column');
                sortByDirection = 1;
            } else if (sortByDescHeader) {
                sortByIdentifier = $(sortByDescHeader).attr('sort-by-column');
                sortByDirection = 2;
            }

            var data = {
                CurrentPage: CurrentPage,
                ItemsPerPage: ItemsPerPage,
                searchText: searchText,
                lookupType: lookupType,
                sortByIdentifier: sortByIdentifier,
                sortByDirection: sortByDirection
            };
            $.ajax({
                url: '/Lookup/Lookup',
                type: "GET",
                data: data
            })
            .done(function (partialViewResult) {
                $('#lookupWindow')
                    .closest('.modal-body-content')
                    .html(partialViewResult);
            });
        };

        $("#searchTextSubmit").click(function (e) {
            e.preventDefault();
            updateLookup(1, null);
        });
        $('#lookupPagination a').on('click', function (e) {
            e.preventDefault();
            updateLookup($(e.target).attr('data-page'), null);
        });

        $('.lookup-header').on('click', function (e) {
            //сортировка по нажатию на заголовок колонки лукапа
            e.preventDefault();

            var sortByClass = null;
            var iconToShowClass = null;
            if ($(e.target).hasClass("sort-by-asc")) {
                sortByClass = "sort-by-desc";
                iconToShowClass ='.lookup-header-sort-icon-desc';
            } else {
                sortByClass = "sort-by-asc";
                iconToShowClass = '.lookup-header-sort-icon-asc';
            }

            $('.lookup-header')
                .removeClass("sort-by-asc")
                .removeClass("sort-by-desc");
            $('.lookup-header .lookup-header-sort-icon').addClass('hidden');

            $(e.target).addClass(sortByClass);
            $(e.target).find(iconToShowClass).removeClass('hidden');

            updateLookup($(e.target).attr('data-page'), null);            
        });
    });

</script>