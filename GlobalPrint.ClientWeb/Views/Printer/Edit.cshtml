@using GlobalPrint.ClientWeb.Models.PrinterController
@using GlobalPrint.ClientWeb.Helpers
@using System.Globalization

@model Printer_EditViewMoel
@{
    ViewBag.Title = "Редактирование принтера";
    Layout = "~/Views/Shared/_NavigationLayout.cshtml";
}

@section Scripts {
    <script src="~/Resources/Scripts/GlobalPrint/Printer/Edit.js"></script>
}

<div class="container">
    <h2>Редактирование принтера "@( Model?.Printer?.Name ?? "Новый" )"</h2>

    @using (Html.BeginForm("Save", "Printer", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger container margin-top-20">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @Html.ValidationSummary(false, "Ошибки: ")
            </div>
        }

        @Html.HiddenFor(x => x.Printer.ID)
        @Html.HiddenFor(x => x.Printer.OwnerUserID)
        @Html.HiddenFor(x => x.Printer.OperatorUserID)

        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Название</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Name, new { @class = "form-control", @type = "text", @placeholder = "Название принтера", @required = "true", @autofocus = true })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Расположение</label>
            </div>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Printer.Location, new { @class = "form-control", @type = "text", @placeholder = "Расположение", @required = "true", @id = "location" })
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button" id="geolocation">
                            <span class="glyphicon glyphicon-globe" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Долгота</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Latitude, new { @class = "form-control", @type = "text", @placeholder = "Долгота", @required = "true", @id = "latitude" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Широта</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Longtitude, new { @class = "form-control", @type = "text", @placeholder = "Широта", @required = "true", @id = "longtitude" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Телефон</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Phone, new { @class = "form-control", @type = "phone", @placeholder = "Телефон" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">Email</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Email, new { @class = "form-control", @type = "email", @placeholder = "Email" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label for="isDisabled" class="control-label text-left">Отключен</label>
            </div>
            <div class="col-sm-10">
                @Html.CheckBoxFor(m => m.Printer.IsDisabled, new { @class = "", @name = "isDisabled", @id = "isDisabled" })
            </div>
        </div>

        //--------------------------------------------List of time---------------------------------------------

        <h2>Расписание работы принтера</h2>
        <table class="table table-hover" id="printerSchedules">
            <thead>
                <tr>
                    <th class="col-xs-6 col-md-6">День</th>
                    <th class="col-xs-6 col-md-1">Открыто</th>
                    <th class="col-xs-3 col-md-3">С</th>
                    <th class="col-xs-3 col-md-3">По</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Schedule.Count; i++)
                {
                    @Html.HiddenFor(e => e.Schedule[i].DayOfWeek)
                    @Html.HiddenFor(e => e.Schedule[i].PrinterScheduleID)
                    <tr class="printer-schedule">
                        <td class="col-xs-6 col-md-6" scope="row">@Html.DisplayTextFor(e => e.Schedule[i].DayOfWeekName)</td>
                        @Html.HiddenFor(e => e.Schedule[i].DayOfWeekName)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Schedule[i].isOpened, new { @class = "is-printer-schedule-open" })</td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].OpenTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].CloseTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        //--------------------------------------------List of services---------------------------------------------

        <h2>Услуги и цены</h2>
        <table class="table table-hover" id="printerServices">
            <thead>
                <tr>
                    <th class="col-xs-1 col-md-1">Наличие</th>
                    <th class="col-xs-3 col-md-3">Услуга</th>
                    <th class="col-xs-3 col-md-3">Размер</th>
                    <th class="col-xs-1 col-md-1">Цветная</th>
                    <th class="col-xs-1 col-md-1">Двусторонняя</th>
                    <th class="col-xs-3 col-md-3">Стоимость</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Services.Count; i++)
                {
                    @Html.HiddenFor(e => e.Services[i].PrintServiceID)
                    @Html.HiddenFor(e => e.Services[i].PrinterServiceID)
                    <tr class="printer-service">
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsSupported, new { @class = "is-printer-service-supported" })</td>
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintType)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintType)
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintSize)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintSize)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsColored, new { @class = "", disabled = "true" })</td>
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsTwoSided, new { @class = "", disabled = "true" })</td>
                        <td class="col-xs-3 col-md-3" scope="row">
                            <div class="input-group">
                                @Html.TextBoxFor(e => e.Services[i].Price, new { @class = "form-control text-right printer-service-price", @type = "number" })
                                <div class="input-group-addon">руб.</div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @*if (Model.NeedPrinterOwnerOffer)
        {
            <div class="form-group">
                <div class="col-sm-12 checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.IsAgreeWithOffer, new { @required = "true" }) <span>Настоящим подтверждаю, что я ознакомлен и согласен с условиями @Html.ActionLink("оферты владельца принтера", "Offer", "Offer", new { @offerTypeID = OfferTypeEnum.PrinterOwnerOffer }, new { target = "_blank" }).</span>
                    </label>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.IsAgreeWithOffer, new { @required = "true", @Value = true })
        }*@

        <div class="form-group">
            <div class="col-sm-12">
                <button class="btn btn-default" type="submit">Сохранить</button>
                <a href="@Request.UrlReferrer" class="btn btn-default"><i class="icon-circle-arrow-left"></i>Отмена</a>
            </div>
        </div>
    }
</div>
