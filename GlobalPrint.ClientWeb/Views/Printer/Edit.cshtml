@using GlobalPrint.ServerBusinessLogic.Models.Domain.Offers;
@using GlobalPrint.ClientWeb.Models.PrinterController
@using Resources.ClientWeb.Printer
@using System.Globalization

@{ var isEdit = Model?.Printer?.ID > 0; }

@model Printer_EditViewMoel
@{
    ViewBag.Title = isEdit ? EditViewResource.FormTabEditTitle : EditViewResource.FormTabNewTitle;
    Layout = "~/Views/Shared/_NavigationLayout.cshtml";
}


@section Scripts {
    <script src="~/Resources/Scripts/GlobalPrint/Printer/Edit.js"></script>
}

<div class="container">
    <h2>@(isEdit ? (EditViewResource.FormHeaderEditText + " \"" + Model?.Printer?.Name + "\"") : EditViewResource.FormTabNewTitle)</h2>

    @using (Html.BeginForm("Save", "Printer", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger container margin-top-20">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @Html.ValidationSummary(false, Resources.Resource.ValidationErrors + ": ")
            </div>
        }

        @Html.HiddenFor(x => x.Printer.ID)
        @Html.HiddenFor(x => x.Printer.OwnerUserID)
        @Html.HiddenFor(x => x.Printer.OperatorUserID)

        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.PrinterNameFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Name, new { @class = "form-control", @type = "text", @placeholder = EditViewResource.PrinterNameFieldLabel, @required = "true", @autofocus = true })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.LocationFieldLabel</label>
            </div>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Printer.Location, new { @class = "form-control", @type = "text", @placeholder = EditViewResource.LocationFieldLabel, @required = "true", @id = "location" })
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button" id="geolocation">
                            <span class="glyphicon glyphicon-globe" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.LatitudeFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Latitude, new { @class = "form-control", @type = "text", @placeholder = EditViewResource.LatitudeFieldLabel, @required = "true", @id = "latitude" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.LongtitudeFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Longtitude, new { @class = "form-control", @type = "text", @placeholder = EditViewResource.LongtitudeFieldLabel, @required = "true", @id = "longtitude" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.PhoneFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Phone, new { @class = "form-control", @type = "phone", @placeholder = EditViewResource.PhoneFieldLabel })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label class="control-label text-left">@EditViewResource.EmailFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Email, new { @class = "form-control", @type = "email", @placeholder = EditViewResource.EmailFieldLabel })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2">
                <label for="isDisabled" class="control-label text-left">@EditViewResource.DisabledFieldLabel</label>
            </div>
            <div class="col-sm-10">
                @Html.CheckBoxFor(m => m.Printer.IsDisabled, new { @class = "", @name = "isDisabled", @id = "isDisabled" })
            </div>
        </div>

        //--------------------------------------------List of time---------------------------------------------

        <h2>@EditViewResource.ScheduleTableHeader</h2>
        <table class="table table-hover" id="printerSchedules">
            <thead>
                <tr>
                    <th class="col-xs-6 col-md-6">@EditViewResource.DayColumnHeader</th>
                    <th class="col-xs-6 col-md-1">@EditViewResource.OpenColumnHeader</th>
                    <th class="col-xs-3 col-md-3">@EditViewResource.OpenFromColumnHeader</th>
                    <th class="col-xs-3 col-md-3">@EditViewResource.OpenToColumnHeader</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Schedule.Count; i++)
                {
                    @Html.HiddenFor(e => e.Schedule[i].DayOfWeek)
                    @Html.HiddenFor(e => e.Schedule[i].PrinterScheduleID)
                    <tr class="printer-schedule">
                        <td class="col-xs-6 col-md-6" scope="row">@Html.DisplayTextFor(e => e.Schedule[i].DayOfWeekName)</td>
                        @Html.HiddenFor(e => e.Schedule[i].DayOfWeekName)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Schedule[i].isOpened, new { @class = "is-printer-schedule-open" })</td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].OpenTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].CloseTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        //--------------------------------------------List of services---------------------------------------------

        <h2>@EditViewResource.PricingTableHeader</h2>
        <table class="table table-hover" id="printerServices">
            <thead>
                <tr>
                    <th class="col-xs-1 col-md-1">@EditViewResource.IsSupportedColumnHeader</th>
                    <th class="col-xs-3 col-md-3">@EditViewResource.ServiceColumnHeader</th>
                    <th class="col-xs-3 col-md-3">@EditViewResource.SizeColumnHeader</th>
                    <th class="col-xs-1 col-md-1">@EditViewResource.IsColoredColumnHeader</th>
                    <th class="col-xs-1 col-md-1">@EditViewResource.IsTwoSidedColumnHeader</th>
                    <th class="col-xs-3 col-md-3">@EditViewResource.PriceColumnHeader</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Services.Count; i++)
                {
                    @Html.HiddenFor(e => e.Services[i].PrintServiceID)
                    @Html.HiddenFor(e => e.Services[i].PrinterServiceID)
                    <tr class="printer-service">
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsSupported, new { @class = "is-printer-service-supported" })</td>
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintType)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintType)
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintSize)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintSize)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsColored, new { @class = "", disabled = "true" })</td>
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsTwoSided, new { @class = "", disabled = "true" })</td>
                        <td class="col-xs-3 col-md-3" scope="row">
                            <div class="input-group">
                                @Html.TextBoxFor(e => e.Services[i].Price, new { @class = "form-control text-right printer-service-price", @type = "number" })
                                <div class="input-group-addon">руб.</div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        if (Model.NeedPrinterOwnerOffer)
        {
            <div class="form-group">
                <div class="col-sm-12 checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.IsAgreeWithOffer, new { @required = "true" }) <span>Настоящим подтверждаю, что я ознакомлен и согласен с условиями @Html.ActionLink("оферты владельца принтера", "Offer", "Offer", new { @offerTypeID = OfferTypeEnum.PrinterOwnerOffer }, new { target = "_blank" }).</span>
                    </label>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.IsAgreeWithOffer, new { @required = "true", @Value = true })
        }

        <div class="form-group">
            <div class="col-sm-12">
                <button class="btn btn-default" type="submit">@EditViewResource.SaveButtolLabel</button>
            </div>
        </div>
    }
</div>