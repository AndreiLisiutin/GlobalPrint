@using Microsoft.AspNet.Identity
@using GlobalPrint.ServerBusinessLogic.BusinessLogicLayer.Models.Domain.Printers
@using GlobalPrint.ServerBusinessLogic.BusinessLogicLayer.Models.Business.Printers
@using GlobalPrint.ClientWeb.Models.PrinterController
@model Printer_EditViewMoel
@{
    ViewBag.Title = "Редактирование принтера";
    Layout = "~/Views/Shared/_NavigationLayout.cshtml";
}

<div class="container">
    <h2>Редактирование принтера "@( Model?.Printer?.Name ?? "Новый" )"</h2>

    @using (Html.BeginForm("SavePrinter", "Printer", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger container margin-top-20">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @Html.ValidationSummary(false, "Ошибки: ")
            </div>
        }

        @Html.HiddenFor(x => x.Printer.ID)
        @Html.HiddenFor(x => x.Printer.OwnerUserID)
        @Html.HiddenFor(x => x.Printer.OperatorUserID)

        <div class="form-group">
            <label class="col-sm-2 control-label text-left">Название</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Printer.Name, new { @class = "form-control", @type = "text", @placeholder = "Название принтера", @required = "true", @autofocus = true })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label text-left">Расположение</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.Printer.Location, new { @class = "form-control", @type = "text", @placeholder = "Расположение", @required = "true", @id = "location" })
            </div>
            <div class="col-sm-2">
                <button class="btn btn-default" type="button" id="geolocation">Геолокация</button>
            </div>
        </div>
            <div class="form-group">
                <label class="col-sm-2 control-label text-left">Долгота</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Printer.Latitude, new { @class = "form-control", @type = "text", @placeholder = "Долгота", @required = "true", @id = "latitude" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label text-left">Широта</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Printer.Longtitude, new { @class = "form-control", @type = "text", @placeholder = "Широта", @required = "true", @id = "longtitude" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label text-left">Телефон</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Printer.Phone, new { @class = "form-control", @type = "phone", @placeholder = "Телефон" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label text-left">Email</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Printer.Email, new { @class = "form-control", @type = "email", @placeholder = "Email" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label text-left">Email</label>
                <div class="col-sm-10">
                    @Html.CheckBoxFor(m => m.Printer.IsDisabled, new { @class = "form-control" })
                </div>
            </div>

        //--------------------------------------------List of time---------------------------------------------

        <h2>Расписание работы принтера</h2>
        <table class="table table-hover" id="printerSchedules">
            <thead>
                <tr>
                    <th class="col-xs-6 col-md-6">День</th>
                    <th class="col-xs-6 col-md-1">Открыто</th>
                    <th class="col-xs-3 col-md-3">С</th>
                    <th class="col-xs-3 col-md-3">По</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Schedule.Count; i++)
                {
                    @Html.HiddenFor(e => e.Schedule[i].DayOfWeek)
                    @Html.HiddenFor(e => e.Schedule[i].PrinterScheduleID)
                    <tr class="printer-schedule">
                        <td class="col-xs-6 col-md-6" scope="row">@Html.DisplayTextFor(e => e.Schedule[i].DayOfWeekName)</td>
                        @Html.HiddenFor(e => e.Schedule[i].DayOfWeekName)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Schedule[i].isOpened, new { @class = "form-control is-printer-schedule-open" })</td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].OpenTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                        <td class="col-xs-3 col-md-3">
                            <div class="input-group clockpicker" data-autoclose="true">
                                @Html.TextBoxFor(e => e.Schedule[i].CloseTime, new { @class = "form-control printer-schedule-time" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        //--------------------------------------------List of services---------------------------------------------

        <h2>Услуги и цены</h2>
        <table class="table table-hover" id="printerServices">
            <thead>
                <tr>
                    <th class="col-xs-3 col-md-3">Услуга</th>
                    <th class="col-xs-3 col-md-3">Размер</th>
                    <th class="col-xs-1 col-md-1">Цветная</th>
                    <th class="col-xs-1 col-md-1">Двусторонняя</th>
                    <th class="col-xs-1 col-md-1">Поддерживается</th>
                    <th class="col-xs-3 col-md-3">Стоимость</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Services.Count; i++)
                {
                    @Html.HiddenFor(e => e.Services[i].PrintServiceID)
                    @Html.HiddenFor(e => e.Services[i].PrinterServiceID)
                    <tr class="printer-service">
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintType)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintType)
                        <td class="col-xs-3 col-md-3" scope="row">@Html.DisplayTextFor(e => e.Services[i].PrintSize)</td>
                        @Html.HiddenFor(e => e.Services[i].PrintSize)
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsColored, new { @class = "form-control", disabled = "true" })</td>
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsTwoSided, new { @class = "form-control", disabled = "true" })</td>
                        <td class="col-xs-1 col-md-1" scope="row">@Html.CheckBoxFor(e => e.Services[i].IsSupported, new { @class = "form-control is-printer-service-supported" })</td>
                        <td class="col-xs-3 col-md-3" scope="row">@Html.TextBoxFor(e => e.Services[i].Price, new { @class = "form-control printer-service-price", @type = "number" })</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="form-group">
            <div class="col-sm-10">
                <button class="btn btn-default" type="submit">Сохранить</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.clockpicker').clockpicker();

            var disablePriceForNotSupported = function () {
                $('#printerServices .printer-service').each(function (index, item) {

                    var isServiceSupported = $(item)
                        .find('.is-printer-service-supported')
                        .is(':checked');

                    var prices = $(item)
                        .find('.printer-service-price');

                    prices.attr('disabled', !isServiceSupported);
                    if (!isServiceSupported) {
                        prices.val('');
                    }

                });
            };
            var disableTimeForClosed = function () {
                $('#printerSchedules .printer-schedule').each(function (index, item) {

                    var isPrinterOpen = $(item)
                        .find('.is-printer-schedule-open')
                        .is(':checked');

                    var clockpickers = $(item)
                        .find('.printer-schedule-time');

                    clockpickers.attr('disabled', !isPrinterOpen);
                    if (!isPrinterOpen) {
                        clockpickers.val('');
                    }

                    var clockpickerBtn = $(item)
                        .find('.clockpicker .input-group-addon');

                    if (isPrinterOpen) {
                        clockpickerBtn.removeClass('hidden');
                    } else {
                        clockpickerBtn.addClass('hidden');
                    }
                });
            };

            disablePriceForNotSupported();
            disableTimeForClosed();

            $("#printerServices .is-printer-service-supported").change(function (event) {
                disablePriceForNotSupported();
            });
            $("#printerSchedules .is-printer-schedule-open").change(function (event) {
                disableTimeForClosed();
            });

            $('#geolocation').click(function () {
                var location = $('#location').val();

                $.ajax({
                    url: 'http://maps.google.com/maps/api/geocode/json',
                    type: 'GET',
                    data: {
                        address: location,
                        sensor: false
                    },
                    async: false
                }).done(function (json) {
                    if (!json) {
                        console.log('Error: ajax response is empty.');
                        return;
                    }

                    try {
                        if (!json.results || !json.results[0]) {
                            return;
                        }
                        var position = {};
                        position.lat = json.results[0].geometry.location.lat;
                        position.lng = json.results[0].geometry.location.lng;

                        $('#latitude').val(position.lat);
                        $('#longtitude').val(position.lng);
                        $('#location').val(json.results[0].formatted_address);

                    } catch (err) {
                        position = null;
                    }
                }).fail(function () {
                    console.log('Error: ajax call failed.');
                });

            });
        });
    </script>
}
